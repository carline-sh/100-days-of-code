/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SeriesRouteImport } from './routes/series'
import { Route as NewsRouteImport } from './routes/news'
import { Route as MusicRouteImport } from './routes/music'
import { Route as MoviesRouteImport } from './routes/movies'
import { Route as FashionRouteImport } from './routes/fashion'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PostsSlugRouteImport } from './routes/posts/$slug'

const SeriesRoute = SeriesRouteImport.update({
  id: '/series',
  path: '/series',
  getParentRoute: () => rootRouteImport,
} as any)
const NewsRoute = NewsRouteImport.update({
  id: '/news',
  path: '/news',
  getParentRoute: () => rootRouteImport,
} as any)
const MusicRoute = MusicRouteImport.update({
  id: '/music',
  path: '/music',
  getParentRoute: () => rootRouteImport,
} as any)
const MoviesRoute = MoviesRouteImport.update({
  id: '/movies',
  path: '/movies',
  getParentRoute: () => rootRouteImport,
} as any)
const FashionRoute = FashionRouteImport.update({
  id: '/fashion',
  path: '/fashion',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PostsSlugRoute = PostsSlugRouteImport.update({
  id: '/posts/$slug',
  path: '/posts/$slug',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/fashion': typeof FashionRoute
  '/movies': typeof MoviesRoute
  '/music': typeof MusicRoute
  '/news': typeof NewsRoute
  '/series': typeof SeriesRoute
  '/posts/$slug': typeof PostsSlugRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/fashion': typeof FashionRoute
  '/movies': typeof MoviesRoute
  '/music': typeof MusicRoute
  '/news': typeof NewsRoute
  '/series': typeof SeriesRoute
  '/posts/$slug': typeof PostsSlugRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/fashion': typeof FashionRoute
  '/movies': typeof MoviesRoute
  '/music': typeof MusicRoute
  '/news': typeof NewsRoute
  '/series': typeof SeriesRoute
  '/posts/$slug': typeof PostsSlugRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/fashion'
    | '/movies'
    | '/music'
    | '/news'
    | '/series'
    | '/posts/$slug'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/fashion'
    | '/movies'
    | '/music'
    | '/news'
    | '/series'
    | '/posts/$slug'
  id:
    | '__root__'
    | '/'
    | '/fashion'
    | '/movies'
    | '/music'
    | '/news'
    | '/series'
    | '/posts/$slug'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  FashionRoute: typeof FashionRoute
  MoviesRoute: typeof MoviesRoute
  MusicRoute: typeof MusicRoute
  NewsRoute: typeof NewsRoute
  SeriesRoute: typeof SeriesRoute
  PostsSlugRoute: typeof PostsSlugRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/series': {
      id: '/series'
      path: '/series'
      fullPath: '/series'
      preLoaderRoute: typeof SeriesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/news': {
      id: '/news'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/music': {
      id: '/music'
      path: '/music'
      fullPath: '/music'
      preLoaderRoute: typeof MusicRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/movies': {
      id: '/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof MoviesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/fashion': {
      id: '/fashion'
      path: '/fashion'
      fullPath: '/fashion'
      preLoaderRoute: typeof FashionRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/posts/$slug': {
      id: '/posts/$slug'
      path: '/posts/$slug'
      fullPath: '/posts/$slug'
      preLoaderRoute: typeof PostsSlugRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  FashionRoute: FashionRoute,
  MoviesRoute: MoviesRoute,
  MusicRoute: MusicRoute,
  NewsRoute: NewsRoute,
  SeriesRoute: SeriesRoute,
  PostsSlugRoute: PostsSlugRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
